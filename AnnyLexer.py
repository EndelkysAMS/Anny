# Generated from Anny.g by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.")
        buf.write("\u0163\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6")
        buf.write("\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3")
        buf.write("\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3")
        buf.write("\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26\3\26")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3")
        buf.write(" \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3")
        buf.write("#\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3\'\3\'\3\'\3\'\3\'\3(\6(\u0126\n(\r(\16(\u0127\3")
        buf.write("(\3(\6(\u012c\n(\r(\16(\u012d\5(\u0130\n(\3)\3)\7)\u0134")
        buf.write("\n)\f)\16)\u0137\13)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*")
        buf.write("\3*\3*\3*\3*\3*\5*\u0149\n*\3+\3+\7+\u014d\n+\f+\16+\u0150")
        buf.write("\13+\3,\6,\u0153\n,\r,\16,\u0154\3,\3,\3-\3-\3-\3-\7-")
        buf.write("\u015d\n-\f-\16-\u0160\13-\3-\3-\2\2.\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.\3\2")
        buf.write("\b\3\2\62;\3\2$$\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17")
        buf.write("\17\"\"\4\2\f\f\17\17\2\u016a\2\3\3\2\2\2\2\5\3\2\2\2")
        buf.write("\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17")
        buf.write("\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3")
        buf.write("\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2")
        buf.write("\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3")
        buf.write("\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2")
        buf.write("\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3")
        buf.write("\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E")
        buf.write("\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2")
        buf.write("O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2")
        buf.write("\2Y\3\2\2\2\3[\3\2\2\2\5b\3\2\2\2\7f\3\2\2\2\tm\3\2\2")
        buf.write("\2\13u\3\2\2\2\r|\3\2\2\2\17\u0085\3\2\2\2\21\u0087\3")
        buf.write("\2\2\2\23\u0089\3\2\2\2\25\u008b\3\2\2\2\27\u008d\3\2")
        buf.write("\2\2\31\u008f\3\2\2\2\33\u0091\3\2\2\2\35\u0093\3\2\2")
        buf.write("\2\37\u0096\3\2\2\2!\u0099\3\2\2\2#\u009b\3\2\2\2%\u009d")
        buf.write("\3\2\2\2\'\u00a0\3\2\2\2)\u00a3\3\2\2\2+\u00a5\3\2\2\2")
        buf.write("-\u00a7\3\2\2\2/\u00aa\3\2\2\2\61\u00b3\3\2\2\2\63\u00b8")
        buf.write("\3\2\2\2\65\u00bf\3\2\2\2\67\u00c8\3\2\2\29\u00ce\3\2")
        buf.write("\2\2;\u00db\3\2\2\2=\u00e0\3\2\2\2?\u00e6\3\2\2\2A\u00ef")
        buf.write("\3\2\2\2C\u00f8\3\2\2\2E\u0100\3\2\2\2G\u010c\3\2\2\2")
        buf.write("I\u0114\3\2\2\2K\u0116\3\2\2\2M\u011f\3\2\2\2O\u0125\3")
        buf.write("\2\2\2Q\u0131\3\2\2\2S\u0148\3\2\2\2U\u014a\3\2\2\2W\u0152")
        buf.write("\3\2\2\2Y\u0158\3\2\2\2[\\\7k\2\2\\]\7p\2\2]^\7k\2\2^")
        buf.write("_\7e\2\2_`\7k\2\2`a\7q\2\2a\4\3\2\2\2bc\7h\2\2cd\7k\2")
        buf.write("\2de\7p\2\2e\6\3\2\2\2fg\7g\2\2gh\7p\2\2hi\7v\2\2ij\7")
        buf.write("g\2\2jk\7t\2\2kl\7q\2\2l\b\3\2\2\2mn\7f\2\2no\7g\2\2o")
        buf.write("p\7e\2\2pq\7k\2\2qr\7o\2\2rs\7c\2\2st\7n\2\2t\n\3\2\2")
        buf.write("\2uv\7e\2\2vw\7c\2\2wx\7f\2\2xy\7g\2\2yz\7p\2\2z{\7c\2")
        buf.write("\2{\f\3\2\2\2|}\7d\2\2}~\7q\2\2~\177\7q\2\2\177\u0080")
        buf.write("\7n\2\2\u0080\u0081\7g\2\2\u0081\u0082\7c\2\2\u0082\u0083")
        buf.write("\7p\2\2\u0083\u0084\7q\2\2\u0084\16\3\2\2\2\u0085\u0086")
        buf.write("\7?\2\2\u0086\20\3\2\2\2\u0087\u0088\7=\2\2\u0088\22\3")
        buf.write("\2\2\2\u0089\u008a\7-\2\2\u008a\24\3\2\2\2\u008b\u008c")
        buf.write("\7/\2\2\u008c\26\3\2\2\2\u008d\u008e\7,\2\2\u008e\30\3")
        buf.write("\2\2\2\u008f\u0090\7\61\2\2\u0090\32\3\2\2\2\u0091\u0092")
        buf.write("\7\'\2\2\u0092\34\3\2\2\2\u0093\u0094\7?\2\2\u0094\u0095")
        buf.write("\7?\2\2\u0095\36\3\2\2\2\u0096\u0097\7#\2\2\u0097\u0098")
        buf.write("\7?\2\2\u0098 \3\2\2\2\u0099\u009a\7>\2\2\u009a\"\3\2")
        buf.write("\2\2\u009b\u009c\7@\2\2\u009c$\3\2\2\2\u009d\u009e\7>")
        buf.write("\2\2\u009e\u009f\7?\2\2\u009f&\3\2\2\2\u00a0\u00a1\7@")
        buf.write("\2\2\u00a1\u00a2\7?\2\2\u00a2(\3\2\2\2\u00a3\u00a4\7*")
        buf.write("\2\2\u00a4*\3\2\2\2\u00a5\u00a6\7+\2\2\u00a6,\3\2\2\2")
        buf.write("\u00a7\u00a8\7u\2\2\u00a8\u00a9\7k\2\2\u00a9.\3\2\2\2")
        buf.write("\u00aa\u00ab\7g\2\2\u00ab\u00ac\7p\2\2\u00ac\u00ad\7v")
        buf.write("\2\2\u00ad\u00ae\7q\2\2\u00ae\u00af\7p\2\2\u00af\u00b0")
        buf.write("\7e\2\2\u00b0\u00b1\7g\2\2\u00b1\u00b2\7u\2\2\u00b2\60")
        buf.write("\3\2\2\2\u00b3\u00b4\7u\2\2\u00b4\u00b5\7k\2\2\u00b5\u00b6")
        buf.write("\7p\2\2\u00b6\u00b7\7q\2\2\u00b7\62\3\2\2\2\u00b8\u00b9")
        buf.write("\7h\2\2\u00b9\u00ba\7k\2\2\u00ba\u00bb\7p\2\2\u00bb\u00bc")
        buf.write("\7a\2\2\u00bc\u00bd\7u\2\2\u00bd\u00be\7k\2\2\u00be\64")
        buf.write("\3\2\2\2\u00bf\u00c0\7o\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2")
        buf.write("\7g\2\2\u00c2\u00c3\7p\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5")
        buf.write("\7t\2\2\u00c5\u00c6\7c\2\2\u00c6\u00c7\7u\2\2\u00c7\66")
        buf.write("\3\2\2\2\u00c8\u00c9\7j\2\2\u00c9\u00ca\7c\2\2\u00ca\u00cb")
        buf.write("\7e\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7t\2\2\u00cd8\3")
        buf.write("\2\2\2\u00ce\u00cf\7h\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1")
        buf.write("\7p\2\2\u00d1\u00d2\7a\2\2\u00d2\u00d3\7o\2\2\u00d3\u00d4")
        buf.write("\7k\2\2\u00d4\u00d5\7g\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7")
        buf.write("\7v\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da")
        buf.write("\7u\2\2\u00da:\3\2\2\2\u00db\u00dc\7r\2\2\u00dc\u00dd")
        buf.write("\7c\2\2\u00dd\u00de\7t\2\2\u00de\u00df\7c\2\2\u00df<\3")
        buf.write("\2\2\2\u00e0\u00e1\7j\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e3")
        buf.write("\7u\2\2\u00e3\u00e4\7v\2\2\u00e4\u00e5\7c\2\2\u00e5>\3")
        buf.write("\2\2\2\u00e6\u00e7\7e\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9")
        buf.write("\7p\2\2\u00e9\u00ea\7\"\2\2\u00ea\u00eb\7r\2\2\u00eb\u00ec")
        buf.write("\7c\2\2\u00ec\u00ed\7u\2\2\u00ed\u00ee\7q\2\2\u00ee@\3")
        buf.write("\2\2\2\u00ef\u00f0\7h\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2")
        buf.write("\7p\2\2\u00f2\u00f3\7a\2\2\u00f3\u00f4\7r\2\2\u00f4\u00f5")
        buf.write("\7c\2\2\u00f5\u00f6\7t\2\2\u00f6\u00f7\7c\2\2\u00f7B\3")
        buf.write("\2\2\2\u00f8\u00f9\7h\2\2\u00f9\u00fa\7w\2\2\u00fa\u00fb")
        buf.write("\7p\2\2\u00fb\u00fc\7e\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe")
        buf.write("\7q\2\2\u00fe\u00ff\7p\2\2\u00ffD\3\2\2\2\u0100\u0101")
        buf.write("\7h\2\2\u0101\u0102\7k\2\2\u0102\u0103\7p\2\2\u0103\u0104")
        buf.write("\7a\2\2\u0104\u0105\7h\2\2\u0105\u0106\7w\2\2\u0106\u0107")
        buf.write("\7p\2\2\u0107\u0108\7e\2\2\u0108\u0109\7k\2\2\u0109\u010a")
        buf.write("\7q\2\2\u010a\u010b\7p\2\2\u010bF\3\2\2\2\u010c\u010d")
        buf.write("\7t\2\2\u010d\u010e\7g\2\2\u010e\u010f\7v\2\2\u010f\u0110")
        buf.write("\7q\2\2\u0110\u0111\7t\2\2\u0111\u0112\7p\2\2\u0112\u0113")
        buf.write("\7c\2\2\u0113H\3\2\2\2\u0114\u0115\7.\2\2\u0115J\3\2\2")
        buf.write("\2\u0116\u0117\7k\2\2\u0117\u0118\7o\2\2\u0118\u0119\7")
        buf.write("r\2\2\u0119\u011a\7t\2\2\u011a\u011b\7k\2\2\u011b\u011c")
        buf.write("\7o\2\2\u011c\u011d\7k\2\2\u011d\u011e\7t\2\2\u011eL\3")
        buf.write("\2\2\2\u011f\u0120\7n\2\2\u0120\u0121\7g\2\2\u0121\u0122")
        buf.write("\7g\2\2\u0122\u0123\7t\2\2\u0123N\3\2\2\2\u0124\u0126")
        buf.write("\t\2\2\2\u0125\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127")
        buf.write("\u0125\3\2\2\2\u0127\u0128\3\2\2\2\u0128\u012f\3\2\2\2")
        buf.write("\u0129\u012b\7\60\2\2\u012a\u012c\t\2\2\2\u012b\u012a")
        buf.write("\3\2\2\2\u012c\u012d\3\2\2\2\u012d\u012b\3\2\2\2\u012d")
        buf.write("\u012e\3\2\2\2\u012e\u0130\3\2\2\2\u012f\u0129\3\2\2\2")
        buf.write("\u012f\u0130\3\2\2\2\u0130P\3\2\2\2\u0131\u0135\7$\2\2")
        buf.write("\u0132\u0134\n\3\2\2\u0133\u0132\3\2\2\2\u0134\u0137\3")
        buf.write("\2\2\2\u0135\u0133\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0138")
        buf.write("\3\2\2\2\u0137\u0135\3\2\2\2\u0138\u0139\7$\2\2\u0139")
        buf.write("R\3\2\2\2\u013a\u013b\7x\2\2\u013b\u013c\7g\2\2\u013c")
        buf.write("\u013d\7t\2\2\u013d\u013e\7f\2\2\u013e\u013f\7c\2\2\u013f")
        buf.write("\u0140\7f\2\2\u0140\u0141\7g\2\2\u0141\u0142\7t\2\2\u0142")
        buf.write("\u0149\7q\2\2\u0143\u0144\7h\2\2\u0144\u0145\7c\2\2\u0145")
        buf.write("\u0146\7n\2\2\u0146\u0147\7u\2\2\u0147\u0149\7q\2\2\u0148")
        buf.write("\u013a\3\2\2\2\u0148\u0143\3\2\2\2\u0149T\3\2\2\2\u014a")
        buf.write("\u014e\t\4\2\2\u014b\u014d\t\5\2\2\u014c\u014b\3\2\2\2")
        buf.write("\u014d\u0150\3\2\2\2\u014e\u014c\3\2\2\2\u014e\u014f\3")
        buf.write("\2\2\2\u014fV\3\2\2\2\u0150\u014e\3\2\2\2\u0151\u0153")
        buf.write("\t\6\2\2\u0152\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154")
        buf.write("\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0156\3\2\2\2")
        buf.write("\u0156\u0157\b,\2\2\u0157X\3\2\2\2\u0158\u0159\7\61\2")
        buf.write("\2\u0159\u015a\7\61\2\2\u015a\u015e\3\2\2\2\u015b\u015d")
        buf.write("\n\7\2\2\u015c\u015b\3\2\2\2\u015d\u0160\3\2\2\2\u015e")
        buf.write("\u015c\3\2\2\2\u015e\u015f\3\2\2\2\u015f\u0161\3\2\2\2")
        buf.write("\u0160\u015e\3\2\2\2\u0161\u0162\b-\2\2\u0162Z\3\2\2\2")
        buf.write("\13\2\u0127\u012d\u012f\u0135\u0148\u014e\u0154\u015e")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class AnnyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    NUMERO = 39
    CADENA = 40
    BOOLEANO = 41
    ID = 42
    WS = 43
    COMENTARIO = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'inicio'", "'fin'", "'entero'", "'decimal'", "'cadena'", "'booleano'", 
            "'='", "';'", "'+'", "'-'", "'*'", "'/'", "'%'", "'=='", "'!='", 
            "'<'", "'>'", "'<='", "'>='", "'('", "')'", "'si'", "'entonces'", 
            "'sino'", "'fin_si'", "'mientras'", "'hacer'", "'fin_mientras'", 
            "'para'", "'hasta'", "'con paso'", "'fin_para'", "'funcion'", 
            "'fin_funcion'", "'retorna'", "','", "'imprimir'", "'leer'" ]

    symbolicNames = [ "<INVALID>",
            "NUMERO", "CADENA", "BOOLEANO", "ID", "WS", "COMENTARIO" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "NUMERO", "CADENA", "BOOLEANO", "ID", "WS", "COMENTARIO" ]

    grammarFileName = "Anny.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


